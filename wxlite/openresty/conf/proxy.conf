proxy_redirect          off;
proxy_set_header        Host            $host;
proxy_set_header        X-Real-IP       $remote_addr;
proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header        X-Forwarded-Proto $scheme; #Tomcat ssl 标识
proxy_set_header        Cookie          $http_cookie;   #解决cookie跨域访问
proxy_hide_header       Vary;   #隐藏后端webserver主机头信息
proxy_hide_header       X-AspNet-Version;
proxy_hide_header       X-AspNetMvc-Version;
proxy_connect_timeout   1200;
proxy_send_timeout      1200;
proxy_read_timeout      1200;
proxy_buffer_size       128k;
proxy_buffers           4 128k;
proxy_busy_buffers_size 128k;
proxy_temp_file_write_size 128k;

#proxy_cache            cache_proxy;    #引用前面定义的缓存区
#proxy_cache_valid      200 304 301 302 8h;     #为不同的响应状态码设置不同的缓存时间
#proxy_cache_valid      404 1m;
#proxy_cache_valid      any 2d;
#proxy_cache_key        "$scheme$request_method$host$request_uri$is_args$args"; #定义cache_key
#proxy_cache_bypass     $http_cache_control; #设定在哪种情形下，nginx将不从缓存中取数据
#proxy_cache_revalidate on;
#proxy_cache_min_uses 3; #同一链接请求达到几次即被缓存，默认值为 1
add_header              X-Nginx-Cache $upstream_cache_status; #缓存状态,MISS:未命中、HIT:缓存命中、EXPIRED:缓存已经过期、UPDATING:正在更新缓存将使用旧的应答、STALE:后端将得到过期的应答
add_header              X-Power-By "WebServer-111@PMIT";
add_header              Access-Control-Allow-Origin *;
add_header              Access-Control-Allow-Methods 'GET,POST,OPTIONS';
add_header              Access-Control-Allow-Headers 'x-requested-with,X_Requested_With,Content-Type';
#expires                15d;    #在响应头里设置Expires:或Cache-Control:max-age，返回给客户端的浏览器缓存失效时间

proxy_next_upstream     http_502 http_504 error timeout invalid_header; #如果后端的服务器返回502 504 执行超时等错误，自动将请求转发到upstream 负责均衡池中的另外一台服务器，实现故障转移
